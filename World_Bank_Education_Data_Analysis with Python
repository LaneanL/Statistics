{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOniD2rECotw9VZxiW8aegK",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/LaneanL/Statistics/blob/main/World_Bank_Education_Data_Analysis.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GeHwAXYNEA9k"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# World Bank Education Data Analysis"
      ],
      "metadata": {
        "id": "n70KToVcXv9G"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Basic Statistics with Python (ANOVA)-Exploratory Analysis of Female Unemployment in the Labor Force"
      ],
      "metadata": {
        "id": "iIVtQv6QZAPZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Loading the Data"
      ],
      "metadata": {
        "id": "y7nHv5TrZS1k"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Data taken from [World Bank Repository]("https://data.worldbank.org/indicator/SL.UEM.TOTL.FE.ZS")
      ],
      "metadata": {
        "id": "W1WsOvCUb8FT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n"
      ],
      "metadata": {
        "id": "OrSslmVydIpv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "main_data = pd.read_csv(\"/content/API_4_DS2_en_csv_v2_5608370.csv\",skiprows=4)\n",
        "main_data.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "AFz5Cw7UdW89",
        "outputId": "226a9b95-1ab4-498a-c19b-6eef60eda3f2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Country Name Country Code  \\\n",
              "0        Aruba          ABW   \n",
              "1        Aruba          ABW   \n",
              "2        Aruba          ABW   \n",
              "3        Aruba          ABW   \n",
              "4        Aruba          ABW   \n",
              "\n",
              "                                      Indicator Name     Indicator Code  \\\n",
              "0      Population ages 15-64 (% of total population)  SP.POP.1564.TO.ZS   \n",
              "1       Population ages 0-14 (% of total population)  SP.POP.0014.TO.ZS   \n",
              "2  Unemployment, total (% of total labor force) (...     SL.UEM.TOTL.ZS   \n",
              "3  Unemployment, male (% of male labor force) (mo...  SL.UEM.TOTL.MA.ZS   \n",
              "4  Unemployment, female (% of female labor force)...  SL.UEM.TOTL.FE.ZS   \n",
              "\n",
              "        1960       1961       1962       1963       1964       1965  ...  \\\n",
              "0  54.495678  54.588701  54.585630  54.674206  54.873448  55.181477  ...   \n",
              "1  43.131043  42.949419  42.852732  42.661157  42.359159  41.936664  ...   \n",
              "2        NaN        NaN        NaN        NaN        NaN        NaN  ...   \n",
              "3        NaN        NaN        NaN        NaN        NaN        NaN  ...   \n",
              "4        NaN        NaN        NaN        NaN        NaN        NaN  ...   \n",
              "\n",
              "        2014       2015       2016       2017       2018       2019  \\\n",
              "0  69.620827  69.352325  69.027743  68.681269  68.320569  67.962515   \n",
              "1  19.045505  18.799607  18.571721  18.334859  18.069771  17.767339   \n",
              "2        NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "3        NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "4        NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "\n",
              "        2020       2021       2022  Unnamed: 67  \n",
              "0  67.712003  67.657094  67.617079          NaN  \n",
              "1  17.351022  16.799407  16.240782          NaN  \n",
              "2        NaN        NaN        NaN          NaN  \n",
              "3        NaN        NaN        NaN          NaN  \n",
              "4        NaN        NaN        NaN          NaN  \n",
              "\n",
              "[5 rows x 68 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7da52b60-c6da-4cc8-a1ec-7dbd94e6f703\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Name</th>\n",
              "      <th>Country Code</th>\n",
              "      <th>Indicator Name</th>\n",
              "      <th>Indicator Code</th>\n",
              "      <th>1960</th>\n",
              "      <th>1961</th>\n",
              "      <th>1962</th>\n",
              "      <th>1963</th>\n",
              "      <th>1964</th>\n",
              "      <th>1965</th>\n",
              "      <th>...</th>\n",
              "      <th>2014</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>Unnamed: 67</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>Population ages 15-64 (% of total population)</td>\n",
              "      <td>SP.POP.1564.TO.ZS</td>\n",
              "      <td>54.495678</td>\n",
              "      <td>54.588701</td>\n",
              "      <td>54.585630</td>\n",
              "      <td>54.674206</td>\n",
              "      <td>54.873448</td>\n",
              "      <td>55.181477</td>\n",
              "      <td>...</td>\n",
              "      <td>69.620827</td>\n",
              "      <td>69.352325</td>\n",
              "      <td>69.027743</td>\n",
              "      <td>68.681269</td>\n",
              "      <td>68.320569</td>\n",
              "      <td>67.962515</td>\n",
              "      <td>67.712003</td>\n",
              "      <td>67.657094</td>\n",
              "      <td>67.617079</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>Population ages 0-14 (% of total population)</td>\n",
              "      <td>SP.POP.0014.TO.ZS</td>\n",
              "      <td>43.131043</td>\n",
              "      <td>42.949419</td>\n",
              "      <td>42.852732</td>\n",
              "      <td>42.661157</td>\n",
              "      <td>42.359159</td>\n",
              "      <td>41.936664</td>\n",
              "      <td>...</td>\n",
              "      <td>19.045505</td>\n",
              "      <td>18.799607</td>\n",
              "      <td>18.571721</td>\n",
              "      <td>18.334859</td>\n",
              "      <td>18.069771</td>\n",
              "      <td>17.767339</td>\n",
              "      <td>17.351022</td>\n",
              "      <td>16.799407</td>\n",
              "      <td>16.240782</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>Unemployment, total (% of total labor force) (...</td>\n",
              "      <td>SL.UEM.TOTL.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>Unemployment, male (% of male labor force) (mo...</td>\n",
              "      <td>SL.UEM.TOTL.MA.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>Unemployment, female (% of female labor force)...</td>\n",
              "      <td>SL.UEM.TOTL.FE.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 68 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7da52b60-c6da-4cc8-a1ec-7dbd94e6f703')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7da52b60-c6da-4cc8-a1ec-7dbd94e6f703 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7da52b60-c6da-4cc8-a1ec-7dbd94e6f703');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "country_data=pd.read_csv(\"/content/Metadata_Country_API_4_DS2_en_csv_v2_5608370.csv\")\n",
        "country_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "zHEFlmuse-Sy",
        "outputId": "baa74856-8665-4a8a-ea54-01e2cdff7f1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Country Code                     Region          IncomeGroup  \\\n",
              "0          ABW  Latin America & Caribbean          High income   \n",
              "1          AFE                        NaN                  NaN   \n",
              "2          AFG                 South Asia           Low income   \n",
              "3          AFW                        NaN                  NaN   \n",
              "4          AGO         Sub-Saharan Africa  Lower middle income   \n",
              "\n",
              "                                        SpecialNotes  \\\n",
              "0                                                NaN   \n",
              "1  26 countries, stretching from the Red Sea in t...   \n",
              "2  The reporting period for national accounts dat...   \n",
              "3  22 countries, stretching from the westernmost ...   \n",
              "4  The World Bank systematically assesses the app...   \n",
              "\n",
              "                     TableName  Unnamed: 5  \n",
              "0                        Aruba         NaN  \n",
              "1  Africa Eastern and Southern         NaN  \n",
              "2                  Afghanistan         NaN  \n",
              "3   Africa Western and Central         NaN  \n",
              "4                       Angola         NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aeb942ed-6470-491c-8610-347a2b3b6db8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Code</th>\n",
              "      <th>Region</th>\n",
              "      <th>IncomeGroup</th>\n",
              "      <th>SpecialNotes</th>\n",
              "      <th>TableName</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ABW</td>\n",
              "      <td>Latin America &amp; Caribbean</td>\n",
              "      <td>High income</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Aruba</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AFE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>26 countries, stretching from the Red Sea in t...</td>\n",
              "      <td>Africa Eastern and Southern</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AFG</td>\n",
              "      <td>South Asia</td>\n",
              "      <td>Low income</td>\n",
              "      <td>The reporting period for national accounts dat...</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AFW</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>22 countries, stretching from the westernmost ...</td>\n",
              "      <td>Africa Western and Central</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AGO</td>\n",
              "      <td>Sub-Saharan Africa</td>\n",
              "      <td>Lower middle income</td>\n",
              "      <td>The World Bank systematically assesses the app...</td>\n",
              "      <td>Angola</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aeb942ed-6470-491c-8610-347a2b3b6db8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-aeb942ed-6470-491c-8610-347a2b3b6db8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-aeb942ed-6470-491c-8610-347a2b3b6db8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "indicator_data=pd.read_csv(\"/content/Metadata_Indicator_API_4_DS2_en_csv_v2_5608370.csv\")\n",
        "indicator_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "oXT2hLO3fav7",
        "outputId": "24603629-dc06-4272-9384-b594fe7450e5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      INDICATOR_CODE                                     INDICATOR_NAME  \\\n",
              "0  SP.POP.1564.TO.ZS      Population ages 15-64 (% of total population)   \n",
              "1  SP.POP.0014.TO.ZS       Population ages 0-14 (% of total population)   \n",
              "2     SL.UEM.TOTL.ZS  Unemployment, total (% of total labor force) (...   \n",
              "3  SL.UEM.TOTL.MA.ZS  Unemployment, male (% of male labor force) (mo...   \n",
              "4  SL.UEM.TOTL.FE.ZS  Unemployment, female (% of female labor force)...   \n",
              "\n",
              "                                         SOURCE_NOTE  \\\n",
              "0  Total population between the ages 15 to 64 as ...   \n",
              "1  Population between the ages 0 to 14 as a perce...   \n",
              "2  Unemployment refers to the share of the labor ...   \n",
              "3  Unemployment refers to the share of the labor ...   \n",
              "4  Unemployment refers to the share of the labor ...   \n",
              "\n",
              "                                 SOURCE_ORGANIZATION  Unnamed: 4  \n",
              "0  United Nations Population Division. World Popu...         NaN  \n",
              "1  United Nations Population Division. World Popu...         NaN  \n",
              "2  International Labour Organization. “ILO Modell...         NaN  \n",
              "3  International Labour Organization. “ILO Modell...         NaN  \n",
              "4  International Labour Organization. “ILO Modell...         NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ecb304ec-24ef-4d8c-8ba0-63f8fd9c3228\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INDICATOR_CODE</th>\n",
              "      <th>INDICATOR_NAME</th>\n",
              "      <th>SOURCE_NOTE</th>\n",
              "      <th>SOURCE_ORGANIZATION</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SP.POP.1564.TO.ZS</td>\n",
              "      <td>Population ages 15-64 (% of total population)</td>\n",
              "      <td>Total population between the ages 15 to 64 as ...</td>\n",
              "      <td>United Nations Population Division. World Popu...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>SP.POP.0014.TO.ZS</td>\n",
              "      <td>Population ages 0-14 (% of total population)</td>\n",
              "      <td>Population between the ages 0 to 14 as a perce...</td>\n",
              "      <td>United Nations Population Division. World Popu...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SL.UEM.TOTL.ZS</td>\n",
              "      <td>Unemployment, total (% of total labor force) (...</td>\n",
              "      <td>Unemployment refers to the share of the labor ...</td>\n",
              "      <td>International Labour Organization. “ILO Modell...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>SL.UEM.TOTL.MA.ZS</td>\n",
              "      <td>Unemployment, male (% of male labor force) (mo...</td>\n",
              "      <td>Unemployment refers to the share of the labor ...</td>\n",
              "      <td>International Labour Organization. “ILO Modell...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SL.UEM.TOTL.FE.ZS</td>\n",
              "      <td>Unemployment, female (% of female labor force)...</td>\n",
              "      <td>Unemployment refers to the share of the labor ...</td>\n",
              "      <td>International Labour Organization. “ILO Modell...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ecb304ec-24ef-4d8c-8ba0-63f8fd9c3228')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ecb304ec-24ef-4d8c-8ba0-63f8fd9c3228 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ecb304ec-24ef-4d8c-8ba0-63f8fd9c3228');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Cleaning the Data"
      ],
      "metadata": {
        "id": "UkCNpezNZZQm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Creating Dataset"
      ],
      "metadata": {
        "id": "r2lAAomE4smp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "main_data.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gtp7H13_5Aj3",
        "outputId": "6c1631bf-0107-44fd-98ce-925cd78ce5d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Country Name', 'Country Code', 'Indicator Name', 'Indicator Code',\n",
              "       '1960', '1961', '1962', '1963', '1964', '1965', '1966', '1967', '1968',\n",
              "       '1969', '1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977',\n",
              "       '1978', '1979', '1980', '1981', '1982', '1983', '1984', '1985', '1986',\n",
              "       '1987', '1988', '1989', '1990', '1991', '1992', '1993', '1994', '1995',\n",
              "       '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2004',\n",
              "       '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013',\n",
              "       '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022',\n",
              "       'Unnamed: 67'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "main_data['Indicator Name'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dcetCGMS5z5x",
        "outputId": "bd4b3bb9-b885-4525-94f0-07102b95c0c1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Population ages 15-64 (% of total population)',\n",
              "       'Population ages 0-14 (% of total population)',\n",
              "       'Unemployment, total (% of total labor force) (modeled ILO estimate)',\n",
              "       'Unemployment, male (% of male labor force) (modeled ILO estimate)',\n",
              "       'Unemployment, female (% of female labor force) (modeled ILO estimate)',\n",
              "       'Labor force, total',\n",
              "       'Labor force, female (% of total labor force)',\n",
              "       'Probability of dying among youth ages 20-24 years (per 1,000)',\n",
              "       'Probability of dying among adolescents ages 15-19 years (per 1,000)',\n",
              "       'Probability of dying among adolescents ages 10-14 years (per 1,000)',\n",
              "       'Probability of dying among children ages 5-9 years (per 1,000)',\n",
              "       'Number of deaths ages 20-24 years',\n",
              "       'Number of deaths ages 15-19 years',\n",
              "       'Number of deaths ages 10-14 years',\n",
              "       'Number of deaths ages 5-9 years',\n",
              "       'Government expenditure on education, total (% of GDP)',\n",
              "       'Government expenditure on education, total (% of government expenditure)',\n",
              "       'Expenditure on tertiary education (% of government expenditure on education)',\n",
              "       'Government expenditure per student, tertiary (% of GDP per capita)',\n",
              "       'Expenditure on secondary education (% of government expenditure on education)',\n",
              "       'Government expenditure per student, secondary (% of GDP per capita)',\n",
              "       'Expenditure on primary education (% of government expenditure on education)',\n",
              "       'Government expenditure per student, primary (% of GDP per capita)',\n",
              "       'Current education expenditure, total (% of total expenditure in public institutions)',\n",
              "       'Current education expenditure, tertiary (% of total expenditure in tertiary public institutions)',\n",
              "       'Current education expenditure, secondary (% of total expenditure in secondary public institutions)',\n",
              "       'Current education expenditure, primary (% of total expenditure in primary public institutions)',\n",
              "       'Tertiary education, academic staff (% female)',\n",
              "       'School enrollment, tertiary, male (% gross)',\n",
              "       'School enrollment, tertiary, female (% gross)',\n",
              "       'School enrollment, tertiary (% gross)',\n",
              "       'Pupil-teacher ratio, tertiary',\n",
              "       'Educational attainment, at least completed short-cycle tertiary, population 25+, total (%) (cumulative)',\n",
              "       'Educational attainment, at least completed short-cycle tertiary, population 25+, male (%) (cumulative)',\n",
              "       'Educational attainment, at least completed short-cycle tertiary, population 25+, female (%) (cumulative)',\n",
              "       \"Educational attainment, at least Master's or equivalent, population 25+, total (%) (cumulative)\",\n",
              "       \"Educational attainment, at least Master's or equivalent, population 25+, male (%) (cumulative)\",\n",
              "       \"Educational attainment, at least Master's or equivalent, population 25+, female (%) (cumulative)\",\n",
              "       'Educational attainment, Doctoral or equivalent, population 25+, total (%) (cumulative)',\n",
              "       'Educational attainment, Doctoral or equivalent, population 25+, male (%) (cumulative)',\n",
              "       'Educational attainment, Doctoral or equivalent, population 25+, female (%) (cumulative)',\n",
              "       \"Educational attainment, at least Bachelor's or equivalent, population 25+, total (%) (cumulative)\",\n",
              "       \"Educational attainment, at least Bachelor's or equivalent, population 25+, male (%) (cumulative)\",\n",
              "       \"Educational attainment, at least Bachelor's or equivalent, population 25+, female (%) (cumulative)\",\n",
              "       'Adolescents out of school (% of lower secondary school age)',\n",
              "       'Adolescents out of school, male (% of male lower secondary school age)',\n",
              "       'Adolescents out of school, female (% of female lower secondary school age)',\n",
              "       'Secondary education, teachers (% female)',\n",
              "       'Secondary education, teachers, female',\n",
              "       'Secondary education, teachers',\n",
              "       'Trained teachers in secondary education (% of total teachers)',\n",
              "       'Trained teachers in upper secondary education (% of total teachers)',\n",
              "       'Trained teachers in upper secondary education, male (% of male teachers)',\n",
              "       'Trained teachers in upper secondary education, female (% of female teachers)',\n",
              "       'Trained teachers in secondary education, male (% of male teachers)',\n",
              "       'Trained teachers in lower secondary education (% of total teachers)',\n",
              "       'Trained teachers in lower secondary education, male (% of male teachers)',\n",
              "       'Trained teachers in lower secondary education, female (% of female teachers)',\n",
              "       'Trained teachers in secondary education, female (% of female teachers)',\n",
              "       'Progression to secondary school (%)',\n",
              "       'Progression to secondary school, male (%)',\n",
              "       'Progression to secondary school, female (%)',\n",
              "       'School enrollment, secondary, private (% of total secondary)',\n",
              "       'School enrollment, secondary, male (% net)',\n",
              "       'School enrollment, secondary, female (% net)',\n",
              "       'School enrollment, secondary (% net)',\n",
              "       'School enrollment, secondary, male (% gross)',\n",
              "       'School enrollment, secondary, female (% gross)',\n",
              "       'School enrollment, secondary (% gross)',\n",
              "       'Secondary education, vocational pupils (% female)',\n",
              "       'Secondary education, vocational pupils',\n",
              "       'Pupil-teacher ratio, upper secondary',\n",
              "       'Pupil-teacher ratio, secondary',\n",
              "       'Pupil-teacher ratio, lower secondary',\n",
              "       'Secondary education, general pupils (% female)',\n",
              "       'Secondary education, general pupils',\n",
              "       'Secondary education, pupils (% female)',\n",
              "       'Secondary education, pupils',\n",
              "       'Secondary education, duration (years)',\n",
              "       'Educational attainment, at least completed upper secondary, population 25+, total (%) (cumulative)',\n",
              "       'Educational attainment, at least completed upper secondary, population 25+, male (%) (cumulative)',\n",
              "       'Educational attainment, at least completed upper secondary, population 25+, female (%) (cumulative)',\n",
              "       'Educational attainment, at least completed post-secondary, population 25+, total (%) (cumulative)',\n",
              "       'Educational attainment, at least completed post-secondary, population 25+, male (%) (cumulative)',\n",
              "       'Educational attainment, at least completed post-secondary, population 25+, female (%) (cumulative)',\n",
              "       'Educational attainment, at least completed lower secondary, population 25+, total (%) (cumulative)',\n",
              "       'Educational attainment, at least completed lower secondary, population 25+, male (%) (cumulative)',\n",
              "       'Educational attainment, at least completed lower secondary, population 25+, female (%) (cumulative)',\n",
              "       'Lower secondary completion rate, total (% of relevant age group)',\n",
              "       'Lower secondary completion rate, male (% of relevant age group)',\n",
              "       'Lower secondary completion rate, female (% of relevant age group)',\n",
              "       'Lower secondary school starting age (years)',\n",
              "       'Children out of school (% of primary school age)',\n",
              "       'Children out of school, male (% of male primary school age)',\n",
              "       'Children out of school, primary, male',\n",
              "       'Children out of school, female (% of female primary school age)',\n",
              "       'Children out of school, primary, female',\n",
              "       'Children out of school, primary',\n",
              "       'Adjusted net enrollment rate, primary, male (% of primary school age children)',\n",
              "       'Adjusted net enrollment rate, primary, female (% of primary school age children)',\n",
              "       'Adjusted net enrollment rate, primary (% of primary school age children)',\n",
              "       'Primary education, teachers (% female)',\n",
              "       'Primary education, teachers',\n",
              "       'Trained teachers in primary education (% of total teachers)',\n",
              "       'Trained teachers in primary education, male (% of male teachers)',\n",
              "       'Trained teachers in primary education, female (% of female teachers)',\n",
              "       'Repeaters, primary, total (% of total enrollment)',\n",
              "       'Repeaters, primary, male (% of male enrollment)',\n",
              "       'Repeaters, primary, female (% of female enrollment)',\n",
              "       'Persistence to last grade of primary, total (% of cohort)',\n",
              "       'Persistence to last grade of primary, male (% of cohort)',\n",
              "       'Persistence to last grade of primary, female (% of cohort)',\n",
              "       'Persistence to grade 5, total (% of cohort)',\n",
              "       'Persistence to grade 5, male (% of cohort)',\n",
              "       'Persistence to grade 5, female (% of cohort)',\n",
              "       'School enrollment, primary, private (% of total primary)',\n",
              "       'Over-age students, primary (% of enrollment)',\n",
              "       'Over-age students, primary, male (% of male enrollment)',\n",
              "       'Over-age students, primary, female (% of female enrollment)',\n",
              "       'Net intake rate in grade 1 (% of official school-age population)',\n",
              "       'Net intake rate in grade 1, male (% of official school-age population)',\n",
              "       'Net intake rate in grade 1, female (% of official school-age population)',\n",
              "       'School enrollment, primary, male (% net)',\n",
              "       'School enrollment, primary, female (% net)',\n",
              "       'School enrollment, primary (% net)',\n",
              "       'Gross intake ratio in first grade of primary education, total (% of relevant age group)',\n",
              "       'Gross intake ratio in first grade of primary education, male (% of relevant age group)',\n",
              "       'Gross intake ratio in first grade of primary education, female (% of relevant age group)',\n",
              "       'School enrollment, primary, male (% gross)',\n",
              "       'School enrollment, primary, female (% gross)',\n",
              "       'School enrollment, primary (% gross)',\n",
              "       'Pupil-teacher ratio, primary',\n",
              "       'Primary education, pupils (% female)',\n",
              "       'Primary education, pupils', 'Primary education, duration (years)',\n",
              "       'Educational attainment, at least completed primary, population 25+ years, total (%) (cumulative)',\n",
              "       'Educational attainment, at least completed primary, population 25+ years, male (%) (cumulative)',\n",
              "       'Educational attainment, at least completed primary, population 25+ years, female (%) (cumulative)',\n",
              "       'Primary completion rate, total (% of relevant age group)',\n",
              "       'Primary completion rate, male (% of relevant age group)',\n",
              "       'Primary completion rate, female (% of relevant age group)',\n",
              "       'Primary school starting age (years)',\n",
              "       'Trained teachers in preprimary education (% of total teachers)',\n",
              "       'Trained teachers in preprimary education, male (% of male teachers)',\n",
              "       'Trained teachers in preprimary education, female (% of female teachers)',\n",
              "       'School enrollment, preprimary, male (% gross)',\n",
              "       'School enrollment, preprimary, female (% gross)',\n",
              "       'School enrollment, preprimary (% gross)',\n",
              "       'Pupil-teacher ratio, preprimary',\n",
              "       'Preprimary education, duration (years)',\n",
              "       'School enrollment, tertiary (gross), gender parity index (GPI)',\n",
              "       'School enrollment, secondary (gross), gender parity index (GPI)',\n",
              "       'School enrollment, primary and secondary (gross), gender parity index (GPI)',\n",
              "       'School enrollment, primary (gross), gender parity index (GPI)',\n",
              "       'Compulsory education, duration (years)',\n",
              "       'Literacy rate, adult total (% of people ages 15 and above)',\n",
              "       'Literacy rate, adult male (% of males ages 15 and above)',\n",
              "       'Literacy rate, adult female (% of females ages 15 and above)',\n",
              "       'Literacy rate, youth total (% of people ages 15-24)',\n",
              "       'Literacy rate, youth male (% of males ages 15-24)',\n",
              "       'Literacy rate, youth (ages 15-24), gender parity index (GPI)',\n",
              "       'Literacy rate, youth female (% of females ages 15-24)'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### View data with *Indicator Name-'Unemployment, female (% of female labor force) (modeled ILO estimate)'*\n",
        "\n"
      ],
      "metadata": {
        "id": "n8V73TR78sJ6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "main_data_unem = main_data[main_data['Indicator Name']=='Unemployment, female (% of female labor force) (modeled ILO estimate)']\n",
        "main_data_unem.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "yB24zM2l6eEL",
        "outputId": "5178650f-0dbb-43cb-c1a0-8a941ac68005"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Country Name Country Code  \\\n",
              "4                          Aruba          ABW   \n",
              "166  Africa Eastern and Southern          AFE   \n",
              "328                  Afghanistan          AFG   \n",
              "490   Africa Western and Central          AFW   \n",
              "652                       Angola          AGO   \n",
              "\n",
              "                                        Indicator Name     Indicator Code  \\\n",
              "4    Unemployment, female (% of female labor force)...  SL.UEM.TOTL.FE.ZS   \n",
              "166  Unemployment, female (% of female labor force)...  SL.UEM.TOTL.FE.ZS   \n",
              "328  Unemployment, female (% of female labor force)...  SL.UEM.TOTL.FE.ZS   \n",
              "490  Unemployment, female (% of female labor force)...  SL.UEM.TOTL.FE.ZS   \n",
              "652  Unemployment, female (% of female labor force)...  SL.UEM.TOTL.FE.ZS   \n",
              "\n",
              "     1960  1961  1962  1963  1964  1965  ...       2014       2015       2016  \\\n",
              "4     NaN   NaN   NaN   NaN   NaN   NaN  ...        NaN        NaN        NaN   \n",
              "166   NaN   NaN   NaN   NaN   NaN   NaN  ...   7.031243   7.222851   7.373213   \n",
              "328   NaN   NaN   NaN   NaN   NaN   NaN  ...  10.306000  11.538000  12.783000   \n",
              "490   NaN   NaN   NaN   NaN   NaN   NaN  ...   4.015900   4.231848   4.096891   \n",
              "652   NaN   NaN   NaN   NaN   NaN   NaN  ...   9.146000   9.172000   9.196000   \n",
              "\n",
              "          2017       2018       2019       2020       2021      2022  \\\n",
              "4          NaN        NaN        NaN        NaN        NaN       NaN   \n",
              "166   7.455046   7.417153   7.620242   8.120845   8.495898  8.510631   \n",
              "328  14.017000  13.924000  13.881000  16.783000        NaN       NaN   \n",
              "490   4.107897   4.196894   4.249169   4.808800   4.898207  4.771260   \n",
              "652   9.171000   9.181000   9.164000   9.896000  10.122000  9.961000   \n",
              "\n",
              "     Unnamed: 67  \n",
              "4            NaN  \n",
              "166          NaN  \n",
              "328          NaN  \n",
              "490          NaN  \n",
              "652          NaN  \n",
              "\n",
              "[5 rows x 68 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-df169e8f-7437-43c0-97d4-a3c0ee69a56b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Name</th>\n",
              "      <th>Country Code</th>\n",
              "      <th>Indicator Name</th>\n",
              "      <th>Indicator Code</th>\n",
              "      <th>1960</th>\n",
              "      <th>1961</th>\n",
              "      <th>1962</th>\n",
              "      <th>1963</th>\n",
              "      <th>1964</th>\n",
              "      <th>1965</th>\n",
              "      <th>...</th>\n",
              "      <th>2014</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>Unnamed: 67</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>Unemployment, female (% of female labor force)...</td>\n",
              "      <td>SL.UEM.TOTL.FE.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>Africa Eastern and Southern</td>\n",
              "      <td>AFE</td>\n",
              "      <td>Unemployment, female (% of female labor force)...</td>\n",
              "      <td>SL.UEM.TOTL.FE.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>7.031243</td>\n",
              "      <td>7.222851</td>\n",
              "      <td>7.373213</td>\n",
              "      <td>7.455046</td>\n",
              "      <td>7.417153</td>\n",
              "      <td>7.620242</td>\n",
              "      <td>8.120845</td>\n",
              "      <td>8.495898</td>\n",
              "      <td>8.510631</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>AFG</td>\n",
              "      <td>Unemployment, female (% of female labor force)...</td>\n",
              "      <td>SL.UEM.TOTL.FE.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>10.306000</td>\n",
              "      <td>11.538000</td>\n",
              "      <td>12.783000</td>\n",
              "      <td>14.017000</td>\n",
              "      <td>13.924000</td>\n",
              "      <td>13.881000</td>\n",
              "      <td>16.783000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>Africa Western and Central</td>\n",
              "      <td>AFW</td>\n",
              "      <td>Unemployment, female (% of female labor force)...</td>\n",
              "      <td>SL.UEM.TOTL.FE.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>4.015900</td>\n",
              "      <td>4.231848</td>\n",
              "      <td>4.096891</td>\n",
              "      <td>4.107897</td>\n",
              "      <td>4.196894</td>\n",
              "      <td>4.249169</td>\n",
              "      <td>4.808800</td>\n",
              "      <td>4.898207</td>\n",
              "      <td>4.771260</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>652</th>\n",
              "      <td>Angola</td>\n",
              "      <td>AGO</td>\n",
              "      <td>Unemployment, female (% of female labor force)...</td>\n",
              "      <td>SL.UEM.TOTL.FE.ZS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>9.146000</td>\n",
              "      <td>9.172000</td>\n",
              "      <td>9.196000</td>\n",
              "      <td>9.171000</td>\n",
              "      <td>9.181000</td>\n",
              "      <td>9.164000</td>\n",
              "      <td>9.896000</td>\n",
              "      <td>10.122000</td>\n",
              "      <td>9.961000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 68 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df169e8f-7437-43c0-97d4-a3c0ee69a56b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-df169e8f-7437-43c0-97d4-a3c0ee69a56b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-df169e8f-7437-43c0-97d4-a3c0ee69a56b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "main_data_unem=main_data_unem[['Country Name', 'Country Code',\n",
        "       '1991', '1992', '1993', '1994', '1995',\n",
        "       '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2004',\n",
        "       '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013',\n",
        "       '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022']]\n",
        "main_data_unem.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "DHJxhecG8ew4",
        "outputId": "ea72a599-6dd6-4e83-e453-3ab26c79c0fa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Country Name Country Code       1991       1992  \\\n",
              "4                          Aruba          ABW        NaN        NaN   \n",
              "166  Africa Eastern and Southern          AFE   7.322141   7.300528   \n",
              "328                  Afghanistan          AFG  10.697000  10.746000   \n",
              "490   Africa Western and Central          AFW   4.160187   4.355305   \n",
              "652                       Angola          AGO   3.829000   3.805000   \n",
              "\n",
              "          1993       1994       1995       1996       1997       1998  ...  \\\n",
              "4          NaN        NaN        NaN        NaN        NaN        NaN  ...   \n",
              "166   7.231113   7.167484   7.118746   7.171858   7.241586   7.247183  ...   \n",
              "328  10.691000  10.675000  10.839000  10.735000  10.652000  10.647000  ...   \n",
              "490   4.389428   4.391232   4.377008   4.402271   4.454056   4.498095  ...   \n",
              "652   3.819000   3.688000   3.593000   3.546000   3.512000   3.467000  ...   \n",
              "\n",
              "          2013       2014       2015       2016       2017       2018  \\\n",
              "4          NaN        NaN        NaN        NaN        NaN        NaN   \n",
              "166   7.007461   7.031243   7.222851   7.373213   7.455046   7.417153   \n",
              "328  10.392000  10.306000  11.538000  12.783000  14.017000  13.924000   \n",
              "490   3.894572   4.015900   4.231848   4.096891   4.107897   4.196894   \n",
              "652   8.665000   9.146000   9.172000   9.196000   9.171000   9.181000   \n",
              "\n",
              "          2019       2020       2021      2022  \n",
              "4          NaN        NaN        NaN       NaN  \n",
              "166   7.620242   8.120845   8.495898  8.510631  \n",
              "328  13.881000  16.783000        NaN       NaN  \n",
              "490   4.249169   4.808800   4.898207  4.771260  \n",
              "652   9.164000   9.896000  10.122000  9.961000  \n",
              "\n",
              "[5 rows x 34 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1780ce85-4dda-4acd-b4a5-865b2416b343\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Name</th>\n",
              "      <th>Country Code</th>\n",
              "      <th>1991</th>\n",
              "      <th>1992</th>\n",
              "      <th>1993</th>\n",
              "      <th>1994</th>\n",
              "      <th>1995</th>\n",
              "      <th>1996</th>\n",
              "      <th>1997</th>\n",
              "      <th>1998</th>\n",
              "      <th>...</th>\n",
              "      <th>2013</th>\n",
              "      <th>2014</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>Africa Eastern and Southern</td>\n",
              "      <td>AFE</td>\n",
              "      <td>7.322141</td>\n",
              "      <td>7.300528</td>\n",
              "      <td>7.231113</td>\n",
              "      <td>7.167484</td>\n",
              "      <td>7.118746</td>\n",
              "      <td>7.171858</td>\n",
              "      <td>7.241586</td>\n",
              "      <td>7.247183</td>\n",
              "      <td>...</td>\n",
              "      <td>7.007461</td>\n",
              "      <td>7.031243</td>\n",
              "      <td>7.222851</td>\n",
              "      <td>7.373213</td>\n",
              "      <td>7.455046</td>\n",
              "      <td>7.417153</td>\n",
              "      <td>7.620242</td>\n",
              "      <td>8.120845</td>\n",
              "      <td>8.495898</td>\n",
              "      <td>8.510631</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>AFG</td>\n",
              "      <td>10.697000</td>\n",
              "      <td>10.746000</td>\n",
              "      <td>10.691000</td>\n",
              "      <td>10.675000</td>\n",
              "      <td>10.839000</td>\n",
              "      <td>10.735000</td>\n",
              "      <td>10.652000</td>\n",
              "      <td>10.647000</td>\n",
              "      <td>...</td>\n",
              "      <td>10.392000</td>\n",
              "      <td>10.306000</td>\n",
              "      <td>11.538000</td>\n",
              "      <td>12.783000</td>\n",
              "      <td>14.017000</td>\n",
              "      <td>13.924000</td>\n",
              "      <td>13.881000</td>\n",
              "      <td>16.783000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>Africa Western and Central</td>\n",
              "      <td>AFW</td>\n",
              "      <td>4.160187</td>\n",
              "      <td>4.355305</td>\n",
              "      <td>4.389428</td>\n",
              "      <td>4.391232</td>\n",
              "      <td>4.377008</td>\n",
              "      <td>4.402271</td>\n",
              "      <td>4.454056</td>\n",
              "      <td>4.498095</td>\n",
              "      <td>...</td>\n",
              "      <td>3.894572</td>\n",
              "      <td>4.015900</td>\n",
              "      <td>4.231848</td>\n",
              "      <td>4.096891</td>\n",
              "      <td>4.107897</td>\n",
              "      <td>4.196894</td>\n",
              "      <td>4.249169</td>\n",
              "      <td>4.808800</td>\n",
              "      <td>4.898207</td>\n",
              "      <td>4.771260</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>652</th>\n",
              "      <td>Angola</td>\n",
              "      <td>AGO</td>\n",
              "      <td>3.829000</td>\n",
              "      <td>3.805000</td>\n",
              "      <td>3.819000</td>\n",
              "      <td>3.688000</td>\n",
              "      <td>3.593000</td>\n",
              "      <td>3.546000</td>\n",
              "      <td>3.512000</td>\n",
              "      <td>3.467000</td>\n",
              "      <td>...</td>\n",
              "      <td>8.665000</td>\n",
              "      <td>9.146000</td>\n",
              "      <td>9.172000</td>\n",
              "      <td>9.196000</td>\n",
              "      <td>9.171000</td>\n",
              "      <td>9.181000</td>\n",
              "      <td>9.164000</td>\n",
              "      <td>9.896000</td>\n",
              "      <td>10.122000</td>\n",
              "      <td>9.961000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 34 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1780ce85-4dda-4acd-b4a5-865b2416b343')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1780ce85-4dda-4acd-b4a5-865b2416b343 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1780ce85-4dda-4acd-b4a5-865b2416b343');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "No data prior to 1991-> filtered for 1991 to 2022 and *Country Name* and *Country Code*"
      ],
      "metadata": {
        "id": "U0zpnfSN-XPi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "country_data.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HV6q_Stq_Nxz",
        "outputId": "892f1184-353f-494c-c300-ab8c319e03ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Country Code', 'Region', 'IncomeGroup', 'SpecialNotes', 'TableName',\n",
              "       'Unnamed: 5'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Filter for *Country Code*, *Region*, and *IncomeGroup*\n"
      ],
      "metadata": {
        "id": "oRMDqeAQ_X-e"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "country_data=country_data[['Country Code', 'Region', 'IncomeGroup']]\n",
        "country_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "pVTeSoC__p3F",
        "outputId": "0a2c7132-c5eb-40ae-efbe-3a8a41798437"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Country Code                     Region          IncomeGroup\n",
              "0          ABW  Latin America & Caribbean          High income\n",
              "1          AFE                        NaN                  NaN\n",
              "2          AFG                 South Asia           Low income\n",
              "3          AFW                        NaN                  NaN\n",
              "4          AGO         Sub-Saharan Africa  Lower middle income"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-02af8f75-816f-4ff0-8dbe-c55053ff5374\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Code</th>\n",
              "      <th>Region</th>\n",
              "      <th>IncomeGroup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ABW</td>\n",
              "      <td>Latin America &amp; Caribbean</td>\n",
              "      <td>High income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AFE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AFG</td>\n",
              "      <td>South Asia</td>\n",
              "      <td>Low income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AFW</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AGO</td>\n",
              "      <td>Sub-Saharan Africa</td>\n",
              "      <td>Lower middle income</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02af8f75-816f-4ff0-8dbe-c55053ff5374')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-02af8f75-816f-4ff0-8dbe-c55053ff5374 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-02af8f75-816f-4ff0-8dbe-c55053ff5374');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Merge data *main_data_unem* with *country_data*"
      ],
      "metadata": {
        "id": "L_VkDBex_9TX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merged_data= pd.merge(main_data_unem,country_data,on='Country Code')\n",
        "merged_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "0gemdadRAIF2",
        "outputId": "f6e1d85e-7874-4c90-94d2-2c4789238b39"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  Country Name Country Code       1991       1992       1993  \\\n",
              "0                        Aruba          ABW        NaN        NaN        NaN   \n",
              "1  Africa Eastern and Southern          AFE   7.322141   7.300528   7.231113   \n",
              "2                  Afghanistan          AFG  10.697000  10.746000  10.691000   \n",
              "3   Africa Western and Central          AFW   4.160187   4.355305   4.389428   \n",
              "4                       Angola          AGO   3.829000   3.805000   3.819000   \n",
              "\n",
              "        1994       1995       1996       1997       1998  ...       2015  \\\n",
              "0        NaN        NaN        NaN        NaN        NaN  ...        NaN   \n",
              "1   7.167484   7.118746   7.171858   7.241586   7.247183  ...   7.222851   \n",
              "2  10.675000  10.839000  10.735000  10.652000  10.647000  ...  11.538000   \n",
              "3   4.391232   4.377008   4.402271   4.454056   4.498095  ...   4.231848   \n",
              "4   3.688000   3.593000   3.546000   3.512000   3.467000  ...   9.172000   \n",
              "\n",
              "        2016       2017       2018       2019       2020       2021      2022  \\\n",
              "0        NaN        NaN        NaN        NaN        NaN        NaN       NaN   \n",
              "1   7.373213   7.455046   7.417153   7.620242   8.120845   8.495898  8.510631   \n",
              "2  12.783000  14.017000  13.924000  13.881000  16.783000        NaN       NaN   \n",
              "3   4.096891   4.107897   4.196894   4.249169   4.808800   4.898207  4.771260   \n",
              "4   9.196000   9.171000   9.181000   9.164000   9.896000  10.122000  9.961000   \n",
              "\n",
              "                      Region          IncomeGroup  \n",
              "0  Latin America & Caribbean          High income  \n",
              "1                        NaN                  NaN  \n",
              "2                 South Asia           Low income  \n",
              "3                        NaN                  NaN  \n",
              "4         Sub-Saharan Africa  Lower middle income  \n",
              "\n",
              "[5 rows x 36 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1f39b93f-b398-479f-af11-dcf5b08225dc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Name</th>\n",
              "      <th>Country Code</th>\n",
              "      <th>1991</th>\n",
              "      <th>1992</th>\n",
              "      <th>1993</th>\n",
              "      <th>1994</th>\n",
              "      <th>1995</th>\n",
              "      <th>1996</th>\n",
              "      <th>1997</th>\n",
              "      <th>1998</th>\n",
              "      <th>...</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>Region</th>\n",
              "      <th>IncomeGroup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Aruba</td>\n",
              "      <td>ABW</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Latin America &amp; Caribbean</td>\n",
              "      <td>High income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Africa Eastern and Southern</td>\n",
              "      <td>AFE</td>\n",
              "      <td>7.322141</td>\n",
              "      <td>7.300528</td>\n",
              "      <td>7.231113</td>\n",
              "      <td>7.167484</td>\n",
              "      <td>7.118746</td>\n",
              "      <td>7.171858</td>\n",
              "      <td>7.241586</td>\n",
              "      <td>7.247183</td>\n",
              "      <td>...</td>\n",
              "      <td>7.222851</td>\n",
              "      <td>7.373213</td>\n",
              "      <td>7.455046</td>\n",
              "      <td>7.417153</td>\n",
              "      <td>7.620242</td>\n",
              "      <td>8.120845</td>\n",
              "      <td>8.495898</td>\n",
              "      <td>8.510631</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>AFG</td>\n",
              "      <td>10.697000</td>\n",
              "      <td>10.746000</td>\n",
              "      <td>10.691000</td>\n",
              "      <td>10.675000</td>\n",
              "      <td>10.839000</td>\n",
              "      <td>10.735000</td>\n",
              "      <td>10.652000</td>\n",
              "      <td>10.647000</td>\n",
              "      <td>...</td>\n",
              "      <td>11.538000</td>\n",
              "      <td>12.783000</td>\n",
              "      <td>14.017000</td>\n",
              "      <td>13.924000</td>\n",
              "      <td>13.881000</td>\n",
              "      <td>16.783000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>South Asia</td>\n",
              "      <td>Low income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Africa Western and Central</td>\n",
              "      <td>AFW</td>\n",
              "      <td>4.160187</td>\n",
              "      <td>4.355305</td>\n",
              "      <td>4.389428</td>\n",
              "      <td>4.391232</td>\n",
              "      <td>4.377008</td>\n",
              "      <td>4.402271</td>\n",
              "      <td>4.454056</td>\n",
              "      <td>4.498095</td>\n",
              "      <td>...</td>\n",
              "      <td>4.231848</td>\n",
              "      <td>4.096891</td>\n",
              "      <td>4.107897</td>\n",
              "      <td>4.196894</td>\n",
              "      <td>4.249169</td>\n",
              "      <td>4.808800</td>\n",
              "      <td>4.898207</td>\n",
              "      <td>4.771260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Angola</td>\n",
              "      <td>AGO</td>\n",
              "      <td>3.829000</td>\n",
              "      <td>3.805000</td>\n",
              "      <td>3.819000</td>\n",
              "      <td>3.688000</td>\n",
              "      <td>3.593000</td>\n",
              "      <td>3.546000</td>\n",
              "      <td>3.512000</td>\n",
              "      <td>3.467000</td>\n",
              "      <td>...</td>\n",
              "      <td>9.172000</td>\n",
              "      <td>9.196000</td>\n",
              "      <td>9.171000</td>\n",
              "      <td>9.181000</td>\n",
              "      <td>9.164000</td>\n",
              "      <td>9.896000</td>\n",
              "      <td>10.122000</td>\n",
              "      <td>9.961000</td>\n",
              "      <td>Sub-Saharan Africa</td>\n",
              "      <td>Lower middle income</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 36 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f39b93f-b398-479f-af11-dcf5b08225dc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1f39b93f-b398-479f-af11-dcf5b08225dc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1f39b93f-b398-479f-af11-dcf5b08225dc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Exploratory Data Analysis"
      ],
      "metadata": {
        "id": "_Jpu531HZkwv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "View which rows have NA data"
      ],
      "metadata": {
        "id": "qsYUVtcVDo5u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "merged_data.isna().sum()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1yNCQlZjDGjA",
        "outputId": "adbef76f-160c-4c5a-f33d-97dd0d2c919b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country Name     0\n",
              "Country Code     0\n",
              "1991            30\n",
              "1992            30\n",
              "1993            30\n",
              "1994            30\n",
              "1995            30\n",
              "1996            30\n",
              "1997            30\n",
              "1998            30\n",
              "1999            30\n",
              "2000            30\n",
              "2001            30\n",
              "2002            30\n",
              "2003            30\n",
              "2004            30\n",
              "2005            30\n",
              "2006            30\n",
              "2007            30\n",
              "2008            30\n",
              "2009            30\n",
              "2010            30\n",
              "2011            30\n",
              "2012            30\n",
              "2013            30\n",
              "2014            30\n",
              "2015            30\n",
              "2016            30\n",
              "2017            30\n",
              "2018            30\n",
              "2019            30\n",
              "2020            30\n",
              "2021            32\n",
              "2022            36\n",
              "Region          48\n",
              "IncomeGroup     49\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "merged_data_clean = merged_data.dropna()\n",
        "merged_data_clean.shape   ##how many rows/columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rJPp9OK-EH6i",
        "outputId": "d29e4b30-2f1d-49ab-c2a8-eee332aaaf37"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(182, 36)"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "grouped_data_income = merged_data_clean.groupby(['IncomeGroup']).describe()   #describe() method-calculates statistical data percentile, mean and std\n",
        "grouped_data_income"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 267
        },
        "id": "QMF5VUODE78m",
        "outputId": "f14578c0-ba86-4a90-aef4-72af33adce47"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     1991                                               \\\n",
              "                    count       mean       std    min      25%     50%   \n",
              "IncomeGroup                                                              \n",
              "High income          60.0   8.309783  5.935488  1.089  3.27575  6.9745   \n",
              "Low income           25.0   6.150440  6.027049  0.291  2.48800  3.9090   \n",
              "Lower middle income  50.0   9.160580  8.857551  0.542  2.52300  5.5185   \n",
              "Upper middle income  47.0  10.232128  8.395304  0.500  3.40500  7.9750   \n",
              "\n",
              "                                       1992             ...      2021          \\\n",
              "                          75%     max count       mean  ...       75%     max   \n",
              "IncomeGroup                                             ...                     \n",
              "High income          11.63600  25.395  60.0   8.710317  ...   8.56775  21.529   \n",
              "Low income            5.83600  23.404  25.0   6.030040  ...   7.59100  30.453   \n",
              "Lower middle income  13.08475  38.164  50.0   9.116200  ...  14.65300  37.901   \n",
              "Upper middle income  15.09800  31.282  47.0  10.852468  ...  17.85300  42.551   \n",
              "\n",
              "                     2022                                                \\\n",
              "                    count       mean       std    min      25%      50%   \n",
              "IncomeGroup                                                               \n",
              "High income          60.0   6.346433  3.877112  0.322  3.53550   5.0425   \n",
              "Low income           25.0   8.130720  8.702621  0.386  2.96300   4.2950   \n",
              "Lower middle income  50.0  10.163520  8.088881  0.432  4.52725   7.0410   \n",
              "Upper middle income  47.0  11.379702  9.070709  0.898  4.15700  10.0320   \n",
              "\n",
              "                                       \n",
              "                          75%     max  \n",
              "IncomeGroup                            \n",
              "High income           7.80275  19.486  \n",
              "Low income            7.39500  30.170  \n",
              "Lower middle income  14.84800  37.879  \n",
              "Upper middle income  14.96150  42.014  \n",
              "\n",
              "[4 rows x 256 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e94aafdd-f163-47e5-a109-a0af77f8cdc7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th colspan=\"8\" halign=\"left\">1991</th>\n",
              "      <th colspan=\"2\" halign=\"left\">1992</th>\n",
              "      <th>...</th>\n",
              "      <th colspan=\"2\" halign=\"left\">2021</th>\n",
              "      <th colspan=\"8\" halign=\"left\">2022</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>...</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IncomeGroup</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>High income</th>\n",
              "      <td>60.0</td>\n",
              "      <td>8.309783</td>\n",
              "      <td>5.935488</td>\n",
              "      <td>1.089</td>\n",
              "      <td>3.27575</td>\n",
              "      <td>6.9745</td>\n",
              "      <td>11.63600</td>\n",
              "      <td>25.395</td>\n",
              "      <td>60.0</td>\n",
              "      <td>8.710317</td>\n",
              "      <td>...</td>\n",
              "      <td>8.56775</td>\n",
              "      <td>21.529</td>\n",
              "      <td>60.0</td>\n",
              "      <td>6.346433</td>\n",
              "      <td>3.877112</td>\n",
              "      <td>0.322</td>\n",
              "      <td>3.53550</td>\n",
              "      <td>5.0425</td>\n",
              "      <td>7.80275</td>\n",
              "      <td>19.486</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Low income</th>\n",
              "      <td>25.0</td>\n",
              "      <td>6.150440</td>\n",
              "      <td>6.027049</td>\n",
              "      <td>0.291</td>\n",
              "      <td>2.48800</td>\n",
              "      <td>3.9090</td>\n",
              "      <td>5.83600</td>\n",
              "      <td>23.404</td>\n",
              "      <td>25.0</td>\n",
              "      <td>6.030040</td>\n",
              "      <td>...</td>\n",
              "      <td>7.59100</td>\n",
              "      <td>30.453</td>\n",
              "      <td>25.0</td>\n",
              "      <td>8.130720</td>\n",
              "      <td>8.702621</td>\n",
              "      <td>0.386</td>\n",
              "      <td>2.96300</td>\n",
              "      <td>4.2950</td>\n",
              "      <td>7.39500</td>\n",
              "      <td>30.170</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lower middle income</th>\n",
              "      <td>50.0</td>\n",
              "      <td>9.160580</td>\n",
              "      <td>8.857551</td>\n",
              "      <td>0.542</td>\n",
              "      <td>2.52300</td>\n",
              "      <td>5.5185</td>\n",
              "      <td>13.08475</td>\n",
              "      <td>38.164</td>\n",
              "      <td>50.0</td>\n",
              "      <td>9.116200</td>\n",
              "      <td>...</td>\n",
              "      <td>14.65300</td>\n",
              "      <td>37.901</td>\n",
              "      <td>50.0</td>\n",
              "      <td>10.163520</td>\n",
              "      <td>8.088881</td>\n",
              "      <td>0.432</td>\n",
              "      <td>4.52725</td>\n",
              "      <td>7.0410</td>\n",
              "      <td>14.84800</td>\n",
              "      <td>37.879</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Upper middle income</th>\n",
              "      <td>47.0</td>\n",
              "      <td>10.232128</td>\n",
              "      <td>8.395304</td>\n",
              "      <td>0.500</td>\n",
              "      <td>3.40500</td>\n",
              "      <td>7.9750</td>\n",
              "      <td>15.09800</td>\n",
              "      <td>31.282</td>\n",
              "      <td>47.0</td>\n",
              "      <td>10.852468</td>\n",
              "      <td>...</td>\n",
              "      <td>17.85300</td>\n",
              "      <td>42.551</td>\n",
              "      <td>47.0</td>\n",
              "      <td>11.379702</td>\n",
              "      <td>9.070709</td>\n",
              "      <td>0.898</td>\n",
              "      <td>4.15700</td>\n",
              "      <td>10.0320</td>\n",
              "      <td>14.96150</td>\n",
              "      <td>42.014</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4 rows × 256 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e94aafdd-f163-47e5-a109-a0af77f8cdc7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e94aafdd-f163-47e5-a109-a0af77f8cdc7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e94aafdd-f163-47e5-a109-a0af77f8cdc7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "grouped_data_income = merged_data_clean.groupby(['IncomeGroup']).mean()   # calc mean\n",
        "grouped_data_income"
      ],
      "metadata": {
        "id": "oPyJkZ_pF4Gn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        " transposed_income_group = grouped_data_income.transpose()   # transpose data for box plot\n",
        " transposed_income_group"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "GVXolcnZGcFb",
        "outputId": "419cefd2-146e-4f6e-feb7-02994d1e74bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "IncomeGroup  High income  Low income  Lower middle income  Upper middle income\n",
              "1991            8.309783     6.15044              9.16058            10.232128\n",
              "1992            8.710317     6.03004              9.11620            10.852468\n",
              "1993            9.604850     5.87064              9.36516            11.260447\n",
              "1994            9.779200     6.11716              9.44416            11.689745\n",
              "1995            9.510917     6.20756              9.46344            12.168894\n",
              "1996            9.584300     6.27044              9.28896            12.966043\n",
              "1997            9.179333     6.35776              9.28820            13.005766\n",
              "1998            8.967283     6.45660              9.35714            13.081255\n",
              "1999            8.969300     6.51960              9.40792            13.107085\n",
              "2000            8.722533     6.76616              9.47072            12.840149\n",
              "2001            8.491217     7.02140              9.61854            12.793447\n",
              "2002            8.673750     7.03112              9.73226            13.000681\n",
              "2003            8.876767     7.01816              9.68238            13.117723\n",
              "2004            8.714217     7.02612              9.62480            13.089170\n",
              "2005            8.491383     7.06056              9.62692            12.962660\n",
              "2006            7.869283     7.16036              9.38080            12.203255\n",
              "2007            7.226517     7.27688              9.29532            11.585043\n",
              "2008            7.049900     7.27092              9.19590            11.211915\n",
              "2009            8.375367     7.41124              9.44932            11.735489\n",
              "2010            8.777917     7.61792              9.57524            11.952915\n",
              "2011            8.921333     7.71084              9.55970            11.811872\n",
              "2012            9.174283     7.81056              9.33094            11.764766\n",
              "2013            9.293217     7.64156              9.35792            11.816383\n",
              "2014            8.952083     7.61128              9.27232            11.800532\n",
              "2015            8.483367     7.60036              9.48026            11.826511\n",
              "2016            8.045833     7.54532              9.49482            11.851319\n",
              "2017            7.489300     7.48836              9.50442            11.616085\n",
              "2018            6.863067     7.38916              9.32658            11.300319\n",
              "2019            6.499417     7.40104              9.31044            11.204340\n",
              "2020            7.711833     8.14120             10.41452            12.178000\n",
              "2021            7.262800     8.24020             10.28578            12.220319\n",
              "2022            6.346433     8.13072             10.16352            11.379702"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80d6d6de-bfc3-4771-83c9-e1d37cad38a5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>IncomeGroup</th>\n",
              "      <th>High income</th>\n",
              "      <th>Low income</th>\n",
              "      <th>Lower middle income</th>\n",
              "      <th>Upper middle income</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1991</th>\n",
              "      <td>8.309783</td>\n",
              "      <td>6.15044</td>\n",
              "      <td>9.16058</td>\n",
              "      <td>10.232128</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1992</th>\n",
              "      <td>8.710317</td>\n",
              "      <td>6.03004</td>\n",
              "      <td>9.11620</td>\n",
              "      <td>10.852468</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1993</th>\n",
              "      <td>9.604850</td>\n",
              "      <td>5.87064</td>\n",
              "      <td>9.36516</td>\n",
              "      <td>11.260447</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1994</th>\n",
              "      <td>9.779200</td>\n",
              "      <td>6.11716</td>\n",
              "      <td>9.44416</td>\n",
              "      <td>11.689745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1995</th>\n",
              "      <td>9.510917</td>\n",
              "      <td>6.20756</td>\n",
              "      <td>9.46344</td>\n",
              "      <td>12.168894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1996</th>\n",
              "      <td>9.584300</td>\n",
              "      <td>6.27044</td>\n",
              "      <td>9.28896</td>\n",
              "      <td>12.966043</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1997</th>\n",
              "      <td>9.179333</td>\n",
              "      <td>6.35776</td>\n",
              "      <td>9.28820</td>\n",
              "      <td>13.005766</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1998</th>\n",
              "      <td>8.967283</td>\n",
              "      <td>6.45660</td>\n",
              "      <td>9.35714</td>\n",
              "      <td>13.081255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1999</th>\n",
              "      <td>8.969300</td>\n",
              "      <td>6.51960</td>\n",
              "      <td>9.40792</td>\n",
              "      <td>13.107085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000</th>\n",
              "      <td>8.722533</td>\n",
              "      <td>6.76616</td>\n",
              "      <td>9.47072</td>\n",
              "      <td>12.840149</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2001</th>\n",
              "      <td>8.491217</td>\n",
              "      <td>7.02140</td>\n",
              "      <td>9.61854</td>\n",
              "      <td>12.793447</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2002</th>\n",
              "      <td>8.673750</td>\n",
              "      <td>7.03112</td>\n",
              "      <td>9.73226</td>\n",
              "      <td>13.000681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2003</th>\n",
              "      <td>8.876767</td>\n",
              "      <td>7.01816</td>\n",
              "      <td>9.68238</td>\n",
              "      <td>13.117723</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2004</th>\n",
              "      <td>8.714217</td>\n",
              "      <td>7.02612</td>\n",
              "      <td>9.62480</td>\n",
              "      <td>13.089170</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2005</th>\n",
              "      <td>8.491383</td>\n",
              "      <td>7.06056</td>\n",
              "      <td>9.62692</td>\n",
              "      <td>12.962660</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2006</th>\n",
              "      <td>7.869283</td>\n",
              "      <td>7.16036</td>\n",
              "      <td>9.38080</td>\n",
              "      <td>12.203255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2007</th>\n",
              "      <td>7.226517</td>\n",
              "      <td>7.27688</td>\n",
              "      <td>9.29532</td>\n",
              "      <td>11.585043</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2008</th>\n",
              "      <td>7.049900</td>\n",
              "      <td>7.27092</td>\n",
              "      <td>9.19590</td>\n",
              "      <td>11.211915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2009</th>\n",
              "      <td>8.375367</td>\n",
              "      <td>7.41124</td>\n",
              "      <td>9.44932</td>\n",
              "      <td>11.735489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2010</th>\n",
              "      <td>8.777917</td>\n",
              "      <td>7.61792</td>\n",
              "      <td>9.57524</td>\n",
              "      <td>11.952915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2011</th>\n",
              "      <td>8.921333</td>\n",
              "      <td>7.71084</td>\n",
              "      <td>9.55970</td>\n",
              "      <td>11.811872</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012</th>\n",
              "      <td>9.174283</td>\n",
              "      <td>7.81056</td>\n",
              "      <td>9.33094</td>\n",
              "      <td>11.764766</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013</th>\n",
              "      <td>9.293217</td>\n",
              "      <td>7.64156</td>\n",
              "      <td>9.35792</td>\n",
              "      <td>11.816383</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014</th>\n",
              "      <td>8.952083</td>\n",
              "      <td>7.61128</td>\n",
              "      <td>9.27232</td>\n",
              "      <td>11.800532</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015</th>\n",
              "      <td>8.483367</td>\n",
              "      <td>7.60036</td>\n",
              "      <td>9.48026</td>\n",
              "      <td>11.826511</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>8.045833</td>\n",
              "      <td>7.54532</td>\n",
              "      <td>9.49482</td>\n",
              "      <td>11.851319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>7.489300</td>\n",
              "      <td>7.48836</td>\n",
              "      <td>9.50442</td>\n",
              "      <td>11.616085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>6.863067</td>\n",
              "      <td>7.38916</td>\n",
              "      <td>9.32658</td>\n",
              "      <td>11.300319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>6.499417</td>\n",
              "      <td>7.40104</td>\n",
              "      <td>9.31044</td>\n",
              "      <td>11.204340</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020</th>\n",
              "      <td>7.711833</td>\n",
              "      <td>8.14120</td>\n",
              "      <td>10.41452</td>\n",
              "      <td>12.178000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021</th>\n",
              "      <td>7.262800</td>\n",
              "      <td>8.24020</td>\n",
              "      <td>10.28578</td>\n",
              "      <td>12.220319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022</th>\n",
              "      <td>6.346433</td>\n",
              "      <td>8.13072</td>\n",
              "      <td>10.16352</td>\n",
              "      <td>11.379702</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80d6d6de-bfc3-4771-83c9-e1d37cad38a5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-80d6d6de-bfc3-4771-83c9-e1d37cad38a5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-80d6d6de-bfc3-4771-83c9-e1d37cad38a5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline    #run mathplotlib when executed"
      ],
      "metadata": {
        "id": "rduKdrsvHIst"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "transposed_income_group.plot(figsize=(15,10))\n",
        "plt.title(\"Mean % of Females Unemployed\")\n",
        "plt.xlabel(\"Year\")\n",
        "plt.ylabel(\"% Unemployed\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 889
        },
        "id": "C1LLRtAkHpu3",
        "outputId": "0f47438a-0519-42e0-b12b-1ddbd160e2b6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, '% Unemployed')"
            ]
          },
          "metadata": {},
          "execution_count": 48
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "grouped_data_region = merged_data_clean.groupby(['Region']).mean ()  #calc mean by region\n",
        "transposed_region = grouped_data_region.transpose()                  #transpose data\n",
        "\n",
        "transposed_region.plot(figsize=(15,10))\n",
        "plt.title(\"Mean % of Females Unemployed by Region\")\n",
        "plt.xlabel(\"Year\")\n",
        "plt.ylabel(\"% Unemployed\")\n"
      ],
      "metadata": {
        "id": "FWcrqoKRKL-W"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ANOVA"
      ],
      "metadata": {
        "id": "OTpZvqqAZqWZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import scipy.stats as stats"
      ],
      "metadata": {
        "id": "tl4WQCSdMJ7J"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "merged_data_clean.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "k46y2oYgMju_",
        "outputId": "d883273b-b3b7-4276-8988-4995a562a695"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Country Name Country Code    1991    1992    1993    1994    1995  \\\n",
              "4                 Angola          AGO   3.829   3.805   3.819   3.688   3.593   \n",
              "5                Albania          ALB  10.272  27.083  22.996  18.897  14.109   \n",
              "8   United Arab Emirates          ARE   2.596   2.531   2.489   2.411   2.361   \n",
              "9              Argentina          ARG   5.748   6.711  12.558  13.927  22.212   \n",
              "10               Armenia          ARM   2.100   2.372   7.315   8.465   9.988   \n",
              "\n",
              "      1996    1997    1998  ...    2015    2016    2017    2018    2019  \\\n",
              "4    3.546   3.512   3.467  ...   9.172   9.196   9.171   9.181   9.164   \n",
              "5   12.917  15.734  19.778  ...  17.115  14.477  12.511  11.876  11.324   \n",
              "8    2.440   2.504   2.621  ...   4.491   4.251   7.579   6.257   5.990   \n",
              "9   19.200  17.641  14.034  ...   8.645   9.250   9.491  10.563  10.712   \n",
              "10  14.474  16.692  13.391  ...  10.917  11.024  11.369  11.493  10.431   \n",
              "\n",
              "      2020    2021    2022                      Region          IncomeGroup  \n",
              "4    9.896  10.122   9.961          Sub-Saharan Africa  Lower middle income  \n",
              "5   12.758  12.609  11.755       Europe & Central Asia  Upper middle income  \n",
              "8    5.818   6.796   6.411  Middle East & North Africa          High income  \n",
              "9   12.390   9.858   7.303   Latin America & Caribbean  Upper middle income  \n",
              "10   9.633  10.720  10.593       Europe & Central Asia  Upper middle income  \n",
              "\n",
              "[5 rows x 36 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8e7aa799-bc04-4f32-8106-ee4f2c30667a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Name</th>\n",
              "      <th>Country Code</th>\n",
              "      <th>1991</th>\n",
              "      <th>1992</th>\n",
              "      <th>1993</th>\n",
              "      <th>1994</th>\n",
              "      <th>1995</th>\n",
              "      <th>1996</th>\n",
              "      <th>1997</th>\n",
              "      <th>1998</th>\n",
              "      <th>...</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>Region</th>\n",
              "      <th>IncomeGroup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Angola</td>\n",
              "      <td>AGO</td>\n",
              "      <td>3.829</td>\n",
              "      <td>3.805</td>\n",
              "      <td>3.819</td>\n",
              "      <td>3.688</td>\n",
              "      <td>3.593</td>\n",
              "      <td>3.546</td>\n",
              "      <td>3.512</td>\n",
              "      <td>3.467</td>\n",
              "      <td>...</td>\n",
              "      <td>9.172</td>\n",
              "      <td>9.196</td>\n",
              "      <td>9.171</td>\n",
              "      <td>9.181</td>\n",
              "      <td>9.164</td>\n",
              "      <td>9.896</td>\n",
              "      <td>10.122</td>\n",
              "      <td>9.961</td>\n",
              "      <td>Sub-Saharan Africa</td>\n",
              "      <td>Lower middle income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Albania</td>\n",
              "      <td>ALB</td>\n",
              "      <td>10.272</td>\n",
              "      <td>27.083</td>\n",
              "      <td>22.996</td>\n",
              "      <td>18.897</td>\n",
              "      <td>14.109</td>\n",
              "      <td>12.917</td>\n",
              "      <td>15.734</td>\n",
              "      <td>19.778</td>\n",
              "      <td>...</td>\n",
              "      <td>17.115</td>\n",
              "      <td>14.477</td>\n",
              "      <td>12.511</td>\n",
              "      <td>11.876</td>\n",
              "      <td>11.324</td>\n",
              "      <td>12.758</td>\n",
              "      <td>12.609</td>\n",
              "      <td>11.755</td>\n",
              "      <td>Europe &amp; Central Asia</td>\n",
              "      <td>Upper middle income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>United Arab Emirates</td>\n",
              "      <td>ARE</td>\n",
              "      <td>2.596</td>\n",
              "      <td>2.531</td>\n",
              "      <td>2.489</td>\n",
              "      <td>2.411</td>\n",
              "      <td>2.361</td>\n",
              "      <td>2.440</td>\n",
              "      <td>2.504</td>\n",
              "      <td>2.621</td>\n",
              "      <td>...</td>\n",
              "      <td>4.491</td>\n",
              "      <td>4.251</td>\n",
              "      <td>7.579</td>\n",
              "      <td>6.257</td>\n",
              "      <td>5.990</td>\n",
              "      <td>5.818</td>\n",
              "      <td>6.796</td>\n",
              "      <td>6.411</td>\n",
              "      <td>Middle East &amp; North Africa</td>\n",
              "      <td>High income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Argentina</td>\n",
              "      <td>ARG</td>\n",
              "      <td>5.748</td>\n",
              "      <td>6.711</td>\n",
              "      <td>12.558</td>\n",
              "      <td>13.927</td>\n",
              "      <td>22.212</td>\n",
              "      <td>19.200</td>\n",
              "      <td>17.641</td>\n",
              "      <td>14.034</td>\n",
              "      <td>...</td>\n",
              "      <td>8.645</td>\n",
              "      <td>9.250</td>\n",
              "      <td>9.491</td>\n",
              "      <td>10.563</td>\n",
              "      <td>10.712</td>\n",
              "      <td>12.390</td>\n",
              "      <td>9.858</td>\n",
              "      <td>7.303</td>\n",
              "      <td>Latin America &amp; Caribbean</td>\n",
              "      <td>Upper middle income</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Armenia</td>\n",
              "      <td>ARM</td>\n",
              "      <td>2.100</td>\n",
              "      <td>2.372</td>\n",
              "      <td>7.315</td>\n",
              "      <td>8.465</td>\n",
              "      <td>9.988</td>\n",
              "      <td>14.474</td>\n",
              "      <td>16.692</td>\n",
              "      <td>13.391</td>\n",
              "      <td>...</td>\n",
              "      <td>10.917</td>\n",
              "      <td>11.024</td>\n",
              "      <td>11.369</td>\n",
              "      <td>11.493</td>\n",
              "      <td>10.431</td>\n",
              "      <td>9.633</td>\n",
              "      <td>10.720</td>\n",
              "      <td>10.593</td>\n",
              "      <td>Europe &amp; Central Asia</td>\n",
              "      <td>Upper middle income</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 36 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e7aa799-bc04-4f32-8106-ee4f2c30667a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8e7aa799-bc04-4f32-8106-ee4f2c30667a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8e7aa799-bc04-4f32-8106-ee4f2c30667a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "income_groups = merged_data_clean['IncomeGroup'].unique()        #create an array of unique values of income group\n",
        "income_groups"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mhvamXj5MoV4",
        "outputId": "80c04594-6082-43c6-acc5-35229e3e6326"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Lower middle income', 'Upper middle income', 'High income',\n",
              "       'Low income'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "income_group_data = []\n",
        "for i in range(len(income_groups)):    # for loop to look through datset for all the income groups\n",
        "    income_group_data.append(merged_data_clean['2019'][merged_data_clean['IncomeGroup']==income_groups[i]])   #merged data income group compared to income_groups **one column-year\n",
        "income_group_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S2YrB568ZrEU",
        "outputId": "a3800a06-4e25-48c9-ddae-f9cb4833cfb0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[4       3.829\n",
              " 18      0.584\n",
              " 20      2.084\n",
              " 28      2.825\n",
              " 32      1.566\n",
              " 41      7.047\n",
              " 42      6.403\n",
              " 44     21.563\n",
              " 46      5.636\n",
              " 47     12.312\n",
              " 56     38.164\n",
              " 60     16.579\n",
              " 67     21.007\n",
              " 83      3.520\n",
              " 85      3.804\n",
              " 97      5.401\n",
              " 100     8.802\n",
              " 109     6.761\n",
              " 111    24.467\n",
              " 117    29.772\n",
              " 120     3.557\n",
              " 121     1.044\n",
              " 122     1.209\n",
              " 128     2.619\n",
              " 129    10.969\n",
              " 137    22.742\n",
              " 140    18.637\n",
              " 147    13.225\n",
              " 162     6.789\n",
              " 165    12.508\n",
              " 173     4.075\n",
              " 174     7.630\n",
              " 177    12.664\n",
              " 183     0.542\n",
              " 186     4.131\n",
              " 188     1.932\n",
              " 206     7.433\n",
              " 208     1.309\n",
              " 218    17.706\n",
              " 223    23.456\n",
              " 233     1.779\n",
              " 236     4.207\n",
              " 242    17.769\n",
              " 245     4.364\n",
              " 251     2.375\n",
              " 256     1.902\n",
              " 257     1.581\n",
              " 259     2.491\n",
              " 263    22.133\n",
              " 264     3.125\n",
              " Name: 1991, dtype: float64,\n",
              " 5      10.272\n",
              " 9       5.748\n",
              " 10      2.100\n",
              " 15      0.963\n",
              " 21     10.968\n",
              " 24     21.480\n",
              " 25      0.500\n",
              " 26     14.332\n",
              " 29      8.038\n",
              " 33     16.973\n",
              " 40      2.062\n",
              " 45     13.845\n",
              " 48      7.084\n",
              " 50     12.509\n",
              " 59     10.530\n",
              " 66      5.931\n",
              " 76      5.964\n",
              " 80     16.126\n",
              " 82      2.573\n",
              " 88      7.975\n",
              " 92      3.367\n",
              " 106     2.988\n",
              " 112     9.523\n",
              " 116     9.103\n",
              " 119     1.018\n",
              " 131    27.139\n",
              " 132    23.000\n",
              " 149     1.591\n",
              " 151     1.559\n",
              " 153     4.360\n",
              " 156    31.282\n",
              " 161    29.516\n",
              " 166    13.575\n",
              " 168     4.341\n",
              " 170    18.606\n",
              " 185     4.986\n",
              " 194     4.699\n",
              " 195     9.887\n",
              " 210     6.440\n",
              " 213    15.864\n",
              " 219    23.093\n",
              " 232     3.443\n",
              " 234     0.992\n",
              " 238     1.786\n",
              " 243     7.123\n",
              " 252    22.153\n",
              " 262    23.503\n",
              " Name: 1991, dtype: float64,\n",
              " 8       2.596\n",
              " 13      9.148\n",
              " 14      3.544\n",
              " 17     10.650\n",
              " 22      3.829\n",
              " 23     12.100\n",
              " 30     25.395\n",
              " 31      6.751\n",
              " 35      9.694\n",
              " 37      2.663\n",
              " 38      7.198\n",
              " 39      5.699\n",
              " 53      4.435\n",
              " 54      2.065\n",
              " 55      6.531\n",
              " 58     10.021\n",
              " 70     23.314\n",
              " 71      1.528\n",
              " 75      5.025\n",
              " 77     11.630\n",
              " 81      7.407\n",
              " 89     13.001\n",
              " 93      3.385\n",
              " 94     15.222\n",
              " 96      1.588\n",
              " 99     11.169\n",
              " 101     7.624\n",
              " 110    16.587\n",
              " 113     2.893\n",
              " 114    16.389\n",
              " 115    15.744\n",
              " 118     2.220\n",
              " 125     1.984\n",
              " 126     1.876\n",
              " 142     1.089\n",
              " 143     2.118\n",
              " 144     2.686\n",
              " 145     3.745\n",
              " 158     6.609\n",
              " 171    21.000\n",
              " 175     9.898\n",
              " 176     4.984\n",
              " 179     9.766\n",
              " 181     8.035\n",
              " 184     8.439\n",
              " 189    14.354\n",
              " 191    12.974\n",
              " 193     5.640\n",
              " 198    13.503\n",
              " 199     2.750\n",
              " 200     7.690\n",
              " 204     4.981\n",
              " 207     2.186\n",
              " 220    11.246\n",
              " 221     5.949\n",
              " 222     2.948\n",
              " 241    23.316\n",
              " 249    11.654\n",
              " 250     6.359\n",
              " 255    13.763\n",
              " Name: 1991, dtype: float64,\n",
              " 16      2.237\n",
              " 19      2.720\n",
              " 34      5.836\n",
              " 43      2.600\n",
              " 69      5.765\n",
              " 72      3.316\n",
              " 86     10.253\n",
              " 87      2.880\n",
              " 130     2.488\n",
              " 150     5.306\n",
              " 157     1.299\n",
              " 164     1.726\n",
              " 167     5.499\n",
              " 172     1.091\n",
              " 192     2.464\n",
              " 202    12.868\n",
              " 205    19.946\n",
              " 209     2.661\n",
              " 212    23.404\n",
              " 215    12.990\n",
              " 226    13.900\n",
              " 228     0.291\n",
              " 231     3.909\n",
              " 246     4.095\n",
              " 261     4.217\n",
              " Name: 1991, dtype: float64]"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "statistic, pvalue = stats.f_oneway(income_group_data[0],income_group_data[1],income_group_data[2],income_group_data[3])   # f one way function\n",
        "print(\"Statistic: %s pvalue %s\"%(statistic,pvalue))\n",
        "\n",
        "if pvalue < 0.05:\n",
        "  print(\"Significant\")\n",
        "else:\n",
        "  print(\"Not Significant\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4nugzzodRnan",
        "outputId": "a6ffbf01-c858-438b-a7df-5519a02bb526"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Statistic: 1.7275648730083206 pvalue 0.16301167691902987\n",
            "Not Significant\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Region Statistics"
      ],
      "metadata": {
        "id": "R8pAQQWZVozV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "region_groups = merged_data_clean['Region'].unique()        #create an array of unique values of income group\n",
        "region_groups"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oUz6__4CVtOB",
        "outputId": "ae283354-ab1d-43b3-ad8f-312367be7d3a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Sub-Saharan Africa', 'Europe & Central Asia',\n",
              "       'Middle East & North Africa', 'Latin America & Caribbean',\n",
              "       'East Asia & Pacific', 'South Asia', 'North America'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "region_group_data = []\n",
        "for i in range(len(region_groups)):    # for loop to look through datset for all the region groups\n",
        "    region_group_data.append(merged_data_clean['2019'][merged_data_clean['Region']==region_groups[i]])   #merged data income group compared to region_groups **one column-year\n",
        "region_group_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F-qTwIi8WD5Q",
        "outputId": "d8ab5c0e-e34b-45d5-f6ca-eb0cfac5b73a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[4       9.164\n",
              " 16      0.856\n",
              " 18      1.736\n",
              " 19      4.639\n",
              " 33     21.966\n",
              " 34      6.457\n",
              " 41      3.011\n",
              " 42      4.145\n",
              " 43      3.745\n",
              " 44     21.855\n",
              " 46     10.261\n",
              " 47     11.618\n",
              " 69      6.378\n",
              " 72      4.289\n",
              " 80     28.274\n",
              " 83      3.594\n",
              " 85      5.067\n",
              " 86      3.217\n",
              " 87      2.711\n",
              " 88      9.176\n",
              " 120     5.252\n",
              " 130     2.361\n",
              " 140    19.062\n",
              " 150     1.877\n",
              " 157     1.563\n",
              " 164     3.730\n",
              " 165    11.598\n",
              " 166     9.720\n",
              " 167     5.772\n",
              " 170    18.753\n",
              " 172     0.472\n",
              " 173     4.895\n",
              " 202    13.515\n",
              " 205    28.444\n",
              " 206     3.044\n",
              " 209     2.159\n",
              " 212    24.383\n",
              " 215    13.154\n",
              " 218    20.272\n",
              " 223    24.549\n",
              " 228     0.766\n",
              " 231     2.800\n",
              " 245     2.777\n",
              " 246     4.046\n",
              " 262    27.068\n",
              " 263     5.215\n",
              " 264     6.990\n",
              " Name: 2019, dtype: float64,\n",
              " 5      11.324\n",
              " 10     10.431\n",
              " 14      4.351\n",
              " 15      5.691\n",
              " 17      4.940\n",
              " 21      3.869\n",
              " 24     18.754\n",
              " 25      3.203\n",
              " 37      4.709\n",
              " 38      7.110\n",
              " 53      8.009\n",
              " 54      2.375\n",
              " 55      2.734\n",
              " 58      5.269\n",
              " 70     15.990\n",
              " 71      4.921\n",
              " 75      6.164\n",
              " 77      8.348\n",
              " 81      3.534\n",
              " 82     10.169\n",
              " 89     21.475\n",
              " 99      7.168\n",
              " 101     3.497\n",
              " 110     4.690\n",
              " 113     3.114\n",
              " 115    11.101\n",
              " 119     5.284\n",
              " 121     4.499\n",
              " 142     5.492\n",
              " 143     5.525\n",
              " 144     5.423\n",
              " 149     4.348\n",
              " 156    18.559\n",
              " 161    15.683\n",
              " 175     3.359\n",
              " 176     3.394\n",
              " 189     3.600\n",
              " 193     7.143\n",
              " 200     3.381\n",
              " 213    11.065\n",
              " 220     5.952\n",
              " 221     4.964\n",
              " 222     6.956\n",
              " 233     5.632\n",
              " 234     2.871\n",
              " 243    16.428\n",
              " 251     5.608\n",
              " Name: 2019, dtype: float64,\n",
              " 8       5.990\n",
              " 22      3.772\n",
              " 56     35.862\n",
              " 60     18.679\n",
              " 67     21.352\n",
              " 111    17.580\n",
              " 112    26.711\n",
              " 114     3.926\n",
              " 117    24.007\n",
              " 126     5.844\n",
              " 129    14.321\n",
              " 131    25.560\n",
              " 147    10.830\n",
              " 158     4.016\n",
              " 181     7.635\n",
              " 195    40.891\n",
              " 199     0.273\n",
              " 204    21.384\n",
              " 226    19.742\n",
              " 242    22.171\n",
              " 261    25.045\n",
              " Name: 2019, dtype: float64,\n",
              " 9      10.712\n",
              " 23     10.024\n",
              " 26     13.960\n",
              " 28      4.000\n",
              " 29     14.490\n",
              " 30      7.278\n",
              " 39      8.000\n",
              " 45     12.773\n",
              " 48     14.117\n",
              " 50      1.200\n",
              " 59      9.412\n",
              " 66      4.591\n",
              " 92      2.937\n",
              " 94     15.093\n",
              " 97      7.782\n",
              " 100    16.544\n",
              " 116     6.377\n",
              " 132    16.955\n",
              " 153     3.517\n",
              " 174     5.286\n",
              " 184     8.015\n",
              " 185     3.735\n",
              " 191     6.848\n",
              " 194     8.299\n",
              " 210     4.382\n",
              " 219    11.156\n",
              " 241     4.038\n",
              " 249    10.509\n",
              " 252    18.204\n",
              " 255    13.430\n",
              " Name: 2019, dtype: float64,\n",
              " 13      5.102\n",
              " 31      8.277\n",
              " 40      3.962\n",
              " 76      5.634\n",
              " 93      5.242\n",
              " 96      2.295\n",
              " 106     3.348\n",
              " 118     2.167\n",
              " 122     0.179\n",
              " 125     3.583\n",
              " 128     2.771\n",
              " 145     1.338\n",
              " 162     4.893\n",
              " 168     3.401\n",
              " 171    11.574\n",
              " 179     4.430\n",
              " 186     2.534\n",
              " 188     1.494\n",
              " 192     2.905\n",
              " 198    13.008\n",
              " 207     3.326\n",
              " 208     0.773\n",
              " 232     0.736\n",
              " 236     5.907\n",
              " 238     3.124\n",
              " 256     1.597\n",
              " 257     1.548\n",
              " 259    13.946\n",
              " Name: 2019, dtype: float64,\n",
              " 20      6.628\n",
              " 32      3.345\n",
              " 109     6.066\n",
              " 137     7.312\n",
              " 151     3.784\n",
              " 177    12.008\n",
              " 183     6.263\n",
              " Name: 2019, dtype: float64,\n",
              " 35     5.249\n",
              " 250    3.611\n",
              " Name: 2019, dtype: float64]"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "statistic, pvalue = stats.f_oneway(region_group_data[0],region_group_data[1],region_group_data[2],region_group_data[3],\n",
        "                                   region_group_data[4],region_group_data[5],region_group_data[6])   # f one way function\n",
        "print(\"Statistic: %s pvalue %s\"%(statistic,pvalue))\n",
        "\n",
        "if pvalue < 0.05:\n",
        "  print(\"Significant\")\n",
        "else:\n",
        "  print(\"Not Significant\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Aci5mHVnWwtg",
        "outputId": "d20f42eb-9c85-48fa-8a5c-ee2635c5f9c4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Statistic: 8.167225791095175 pvalue 8.535650990864875e-08\n",
            "Significant\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Boxplot by Income"
      ],
      "metadata": {
        "id": "GpQOY3k3cdrv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig = plt.figure(figsize=(20,10))\n",
        "ax = fig.add_subplot(111)\n",
        "\n",
        "ax.set_title(\"Boxplot of % Females Unemployed by Income Group\")\n",
        "ax.set\n",
        "\n",
        "ax.boxplot(income_group_data,labels=income_groups,showmeans=True)\n",
        "plt.xlabel(\"Income Groups\")\n",
        "plt.ylabel(\"% Female Unemployed\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 872
        },
        "id": "0pc7nLJpZTNY",
        "outputId": "0ab15bbe-61d7-4704-da16-84dd471f7432"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Boxplot by Region"
      ],
      "metadata": {
        "id": "gMOMQQ-Ncjtx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig = plt.figure(figsize=(20,10))\n",
        "ax = fig.add_subplot(111)\n",
        "\n",
        "ax.set_title(\"Boxplot of % Females Unemployed by Region\")\n",
        "ax.set\n",
        "\n",
        "ax.boxplot(region_group_data,labels=region_groups,showmeans=True)\n",
        "plt.xlabel(\"Region\")\n",
        "plt.ylabel(\"% Female Unemployed\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 872
        },
        "id": "2qJMjOUUcm8W",
        "outputId": "e38e79e9-7839-45d5-f4b9-6d2848f4bf01"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Green arrows =mean; circles=outliers"
      ],
      "metadata": {
        "id": "Xh9VrOLIaTem"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "0DKFfMy8cY4D"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
